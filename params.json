{"name":"Indri","tagline":"File browser web control","body":"Indri\r\n=====\r\n\r\nIndri is a client-side web file dialog for selecting file or specifying a destination in a remote file repository. It can be styled to integrate with web applications, and provides full configuration through rendering and file system plugins.\r\n\r\nGetting Started\r\n---------------\r\n\r\nFirst, Indri needs a web-based file system to talk to. The distribution provides a few sample implementations. To set up a file system for a local hard drive:\r\n\r\n1. Download/install Node.js\r\n2. Open a shell and cd to the indri/filesystems folder\r\n3. Execute this:  `node node-filesystem.js`\r\n\r\nOptionally, you can provide a path to a config file, use the `.example`\r\nfiles in `filesystems/` as an template:\r\n```bash\r\nnode node-filesystem.js config-nathan.json\r\n```\r\nIf no file is specified, `node-filesystem.js` defaults to loading `./config-default.json`, which is configured to host the filesystem at `http://localhost:1337/`. You can view this location in a web browser to make sure it's set up correctly.\r\n\r\n### Embedding Indri in a web page\r\n\r\nIndri comes with standard configurations for open and save dialogs. The only additional configuration option that must be supplied is a callback for when file system items are selected or when the dialog is cancelled.\r\n\r\nThe web page needs to have the `build/indri-current.version.number` folder uploaded to it, then include the indri.min.css stylesheet and indri-min.js script. Then, given an empty `div` with the id `mydialog`, the simplest Indri setup script using jQueryUI looks like this (version `0.5.0` is used in this example):\r\n\r\n```html\r\n<script type=\"text/javascript\" src=\"jquery-1.10.2.js\"></script>\r\n<script type=\"text/javascript\" src=\"jquery-ui-1.10.3.min.js\"></script>\r\n<link href=\"indri-0.5.0/indri.min.css\" rel=\"stylesheet\" type=\"text/css\">\r\n<script type=\"text/javascript\" src=\"indri-0.5.0/indri.min.js\"></script>\r\n```\r\n```javascript\r\nvar fileSystemManager = new FileSystemManager(\"http://localhost:1337/\");\r\n\r\n      jQuery('#myDialog').load('indri-0.5.0/templates/indri.html #browserui', function() {\r\n\tvar initializer = jQuery.extend(true, {}, FileBrowser.prototype.OpenDialogInitializer, {\r\n\r\n\t\tresultCallback : function(result) { \r\n\t\t\tjQuery('#myDialog').dialog('close');\r\n\t\t\tconsole.log(result);\t\t\t\t\t\t\r\n\t\t}\r\n\t});\r\n\r\n\tFileBrowser.attach(jQuery(\"#browserui\"), fileSystemManager, initializer);\r\n\tjQuery('#myDialog').dialog(); \r\n});\r\n```\r\n\r\nThis uses the default settings for an Open File dialog, and provides a callback that closes the dialog and logs the result to the javascript console.\r\n\r\nThe full documentation (https://github.com/ikayzo/indri/wiki) explains the parameters to FileBrowser.attach() in detail, and covers how to customize Indri's functionality and appearance.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}